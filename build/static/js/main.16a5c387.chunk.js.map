{"version":3,"sources":["components/Person.jsx","components/PersonField.jsx","components/PersonForm.jsx","components/PhoneFilter.jsx","services/person.js","components/Notification.jsx","App.jsx","index.js"],"names":["Person","personFilter","handlerDelete","map","p","name","phone","onClick","id","PersonField","props","currentValue","handleOnChange","value","onChange","PersonForm","handlerOnSubmit","newName","handlerOnChangeName","newPhone","handlerOnChangePhone","onSubmit","type","PhoneFilter","handleOnchage","baseUrl","axios","get","then","response","data","person","post","put","delete","Notification","message","className","makeNotificactionSuccess","msg","App","useState","setNewName","setNewPhone","filterNane","setFilterNane","persons","setPersons","notification","setNotificacion","useEffect","personService","allPerson","length","filter","item","console","log","toLowerCase","includes","e","preventDefault","target","currentPerson","find","window","confirm","newPerson","filtered","setTimeout","deleted","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16a5c387.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ personFilter, handlerDelete }) => {\n  return (\n    <ul>\n      {personFilter.map(p => (\n        <li key={p.name}>\n          {p.name} {p.phone}\n          <button onClick={() => handlerDelete(p.id, p.name)}>delete</button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default Person\n","import React from 'react'\n\nconst PersonField = props => {\n  const { name, currentValue, handleOnChange } = props\n  return (\n    <div>\n      {name}: <input value={currentValue} onChange={handleOnChange} />\n    </div>\n  )\n}\n\nexport default PersonField\n","import React from 'react'\nimport PersonField from './PersonField'\n\nconst PersonForm = props => {\n  const {\n    handlerOnSubmit,\n    newName,\n    handlerOnChangeName,\n    newPhone,\n    handlerOnChangePhone,\n  } = props\n\n  return (\n    <form onSubmit={handlerOnSubmit}>\n      <PersonField\n        name='Name'\n        currentValue={newName}\n        handleOnChange={handlerOnChangeName}\n      />\n      <PersonField\n        name='Phone'\n        currentValue={newPhone}\n        handleOnChange={handlerOnChangePhone}\n      />\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  )\n}\nexport default PersonForm\n","import React from 'react'\n\nconst PhoneFilter = ({ currentValue, handleOnchage }) => {\n  return (\n    <div>\n      <span>Filter by name</span>\n      <input value={currentValue} onChange={handleOnchage} />\n    </div>\n  )\n}\n\nexport default PhoneFilter\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}?_sort=name&_order=asc`)\n  return request.then(response => response.data)\n}\n\nconst create = person => {\n  const request = axios.post(baseUrl, person)\n  return request.then(response => response.data)\n}\n\nconst update = (id, person) => {\n  const request = axios.put(`${baseUrl}/${id}`, person)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, remove }\n","const Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className={type}>{message}</div>\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport PhoneFilter from './components/PhoneFilter'\nimport personService from './services/person'\nimport Notification from './components/Notification'\n\nconst makeNotificactionSuccess = (msg) => { return  {message: msg,type: 'success'}}\nconst makeNotificactionError = (msg) => { return  {message: msg,type: 'error'}}\nconst clearNotificaction = () =>{ return  {message: null,type: null}}\n\n\n/////////////////////////////////////////////////\nconst App = () => {\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [filterNane, setFilterNane] = useState('')\n  const [persons, setPersons] = useState([])\n  const [notification, setNotificacion] = useState(clearNotificaction())\n\n  useEffect(() => {\n    personService.getAll().then(allPerson => {\n      setPersons(allPerson)\n    })\n  }, [])\n\n  const handlerOnChangeFilterName = e => {\n    e.preventDefault()\n    console.log('filterName', e.target.value)\n    setFilterNane(e.target.value)\n  }\n\n  const handlerOnChangePhone = e => {\n    console.log('phone', e.target.value)\n    setNewPhone(e.target.value)\n  }\n\n  const handlerOnChangeName = e => {\n    console.log('Name', e.target.value)\n    setNewName(e.target.value)\n  }\n\n  const handlerOnSubmit = e => {\n    e.preventDefault()\n\n    const person = { name: newName, phone: newPhone }\n    const currentPerson = persons.find(item => item.name === newName)\n\n    // si el nombre ya exite actualizo el telefono\n    if (!currentPerson) {\n      personService.create(person).then(newPerson => {\n        setPersons([...persons, newPerson])\n        //limpio el formulario\n        setNewName('')\n        setNewPhone('')\n        setNotificacion(makeNotificactionSuccess(`Added ${newName}`))\n        setTimeout(() => {setNotificacion(clearNotificaction())}, 5000)\n      })\n    } else {\n      if (!window.confirm(`Seguro que desea actualizar los datos de ${newName}`)) return\n      \n      personService\n        .update(currentPerson.id, { ...currentPerson, phone: newPhone })\n        .then(newPerson => {\n          const filtered = persons.filter(person => person.id !== newPerson.id)\n          setPersons([...filtered, newPerson])\n\n          //limpio el formulario\n          setNewName('')\n          setNewPhone('')\n          setNotificacion(makeNotificactionSuccess(`Modificated ${newName}`))\n          setTimeout(() => {setNotificacion(clearNotificaction())}, 5000)\n        })\n    }\n  }\n\n  const handlerOnDeletePerson = (id, name) => {\n    if (window.confirm(`Do you delete ${name} person`)) {\n      personService\n        .remove(id)\n        .then(deleted => {\n          setNotificacion(makeNotificactionSuccess(`Deleted ${name}`))\n          setTimeout(() => {setNotificacion(clearNotificaction())}, 5000)\n          // SI SE BORRO RECARGO TODO DESDE LA BASES\n          // personService.getAll().then(allPerson => {setPersons(allPerson)})\n\n          // OTRA FORMA DE BORRAR EL DIRECTEMENTE ELIMINANDO EL ELEMENTO\n          const filtered = persons.filter(person => person.id !== id)\n          setPersons(filtered)\n        })\n        .catch(error => {\n          setNotificacion(makeNotificactionError(`Information of ${name} has alredy removed from server`));\n          setTimeout(() => {setNotificacion(clearNotificaction())}, 15000)\n          console.log(error)\n        })\n    }\n  }\n\n  const personFilter =\n    typeof filterNane === 'undefined' || filterNane.length === 0\n      ? persons\n      : persons.filter(item => {\n          console.log(item.name, filterNane)\n          return item.name.toLowerCase().includes(filterNane.toLowerCase())\n        })\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification.message} type={notification.type} />\n\n      <PhoneFilter\n        currentValue={filterNane}\n        handleOnchage={handlerOnChangeFilterName}\n      />\n\n      <h2>Add a new </h2>\n      <PersonForm\n        handlerOnSubmit={handlerOnSubmit}\n        newName={newName}\n        handlerOnChangeName={handlerOnChangeName}\n        newPhone={newPhone}\n        handlerOnChangePhone={handlerOnChangePhone}\n      />\n\n      <h2>Number</h2>\n      <Person\n        personFilter={personFilter}\n        handlerDelete={handlerOnDeletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}